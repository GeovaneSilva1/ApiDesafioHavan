// <auto-generated />
using System;
using LojaVirtual.ProductApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaVirtual.ProductApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LojaVirtual.ProductApi.Classes.VendaRelatorio", b =>
                {
                    b.Property<int>("IdVenda")
                        .HasColumnType("int");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Produto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("VendaRelatorios");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.CondicaoPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Dias")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("condicaopagamentos");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("date");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("notificacoes");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.PrecoProdutoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("precoprodutoclientes");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TabelaPrecoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TabelaPrecoId");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.TabelaPreco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tabelaprecos");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("CondicaoPagamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CondicaoPagamentoId");

                    b.ToTable("vendas");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.VendaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("vendaitens");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Notificacao", b =>
                {
                    b.HasOne("LojaVirtual.ProductApi.Models.Cliente", "Cliente")
                        .WithMany("Notificacoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaVirtual.ProductApi.Models.Produto", "Produto")
                        .WithMany("Notificacoes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.PrecoProdutoCliente", b =>
                {
                    b.HasOne("LojaVirtual.ProductApi.Models.Cliente", "Cliente")
                        .WithMany("PrecoProdutoClientes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaVirtual.ProductApi.Models.Produto", "Produto")
                        .WithMany("PrecoProdutoClientes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Produto", b =>
                {
                    b.HasOne("LojaVirtual.ProductApi.Models.TabelaPreco", "TabelaPreco")
                        .WithMany("Produtos")
                        .HasForeignKey("TabelaPrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TabelaPreco");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Venda", b =>
                {
                    b.HasOne("LojaVirtual.ProductApi.Models.Cliente", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaVirtual.ProductApi.Models.CondicaoPagamento", "CondicaoPagamento")
                        .WithMany("Vendas")
                        .HasForeignKey("CondicaoPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("CondicaoPagamento");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.VendaItem", b =>
                {
                    b.HasOne("LojaVirtual.ProductApi.Models.Produto", "Produto")
                        .WithMany("VendaItem")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaVirtual.ProductApi.Models.Venda", "Venda")
                        .WithMany("VendaItem")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Cliente", b =>
                {
                    b.Navigation("Notificacoes");

                    b.Navigation("PrecoProdutoClientes");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.CondicaoPagamento", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Produto", b =>
                {
                    b.Navigation("Notificacoes");

                    b.Navigation("PrecoProdutoClientes");

                    b.Navigation("VendaItem");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.TabelaPreco", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Venda", b =>
                {
                    b.Navigation("VendaItem");
                });
#pragma warning restore 612, 618
        }
    }
}
