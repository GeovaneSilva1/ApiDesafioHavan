// <auto-generated />
using System;
using LojaVirtual.ProductApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaVirtual.ProductApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250605005734_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .HasColumnType("longtext");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.CondicaoPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Dias")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("condicaopagamentos");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.PrecoProdutoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("TabelaPrecoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("TabelaPrecoId");

                    b.ToTable("PrecoProdutoClientes");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("SKU")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.TabelaPreco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TabelaPrecos");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("CondicaoPagamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CondicaoPagamentoId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.VendaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("VendaItens");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Notificacao", b =>
                {
                    b.HasOne("LojaVirtual.ProductApi.Models.Cliente", null)
                        .WithMany("Notificacoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaVirtual.ProductApi.Models.Produto", null)
                        .WithMany("Notificacoes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.PrecoProdutoCliente", b =>
                {
                    b.HasOne("LojaVirtual.ProductApi.Models.Cliente", null)
                        .WithMany("PrecoProdutoClientes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaVirtual.ProductApi.Models.Produto", null)
                        .WithMany("PrecoProdutoClientes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaVirtual.ProductApi.Models.TabelaPreco", null)
                        .WithMany("PrecoProdutoClientes")
                        .HasForeignKey("TabelaPrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Venda", b =>
                {
                    b.HasOne("LojaVirtual.ProductApi.Models.Cliente", null)
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaVirtual.ProductApi.Models.CondicaoPagamento", null)
                        .WithMany("Vendas")
                        .HasForeignKey("CondicaoPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.VendaItem", b =>
                {
                    b.HasOne("LojaVirtual.ProductApi.Models.Produto", null)
                        .WithMany("VendaItems")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaVirtual.ProductApi.Models.Venda", null)
                        .WithMany("Itens")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Cliente", b =>
                {
                    b.Navigation("Notificacoes");

                    b.Navigation("PrecoProdutoClientes");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.CondicaoPagamento", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Produto", b =>
                {
                    b.Navigation("Notificacoes");

                    b.Navigation("PrecoProdutoClientes");

                    b.Navigation("VendaItems");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.TabelaPreco", b =>
                {
                    b.Navigation("PrecoProdutoClientes");
                });

            modelBuilder.Entity("LojaVirtual.ProductApi.Models.Venda", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
